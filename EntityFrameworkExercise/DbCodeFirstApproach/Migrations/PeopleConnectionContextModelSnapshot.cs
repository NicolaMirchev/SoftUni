// <auto-generated />
using System;
using DbCodeFirstApproach.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DbCodeFirstApproach.Migrations
{
    [DbContext(typeof(PeopleConnectionContext))]
    partial class PeopleConnectionContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DbCodeFirstApproach.Models.Activity", b =>
                {
                    b.Property<int>("ActivityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ActivityId"), 1L, 1);

                    b.Property<int>("ActivityName")
                        .HasColumnType("int");

                    b.Property<int?>("PersonId")
                        .HasColumnType("int");

                    b.Property<int>("Points")
                        .HasColumnType("int");

                    b.HasKey("ActivityId");

                    b.HasIndex("PersonId");

                    b.ToTable("Activities");
                });

            modelBuilder.Entity("DbCodeFirstApproach.Models.FriendRelation", b =>
                {
                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.HasKey("PersonId");

                    b.ToTable("FriendRelations");
                });

            modelBuilder.Entity("DbCodeFirstApproach.Models.Person", b =>
                {
                    b.Property<int>("PersonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PersonId"), 1L, 1);

                    b.Property<int?>("FriendRelationPersonId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PersonId");

                    b.HasIndex("FriendRelationPersonId");

                    b.ToTable("Persons");
                });

            modelBuilder.Entity("DbCodeFirstApproach.Models.Activity", b =>
                {
                    b.HasOne("DbCodeFirstApproach.Models.Person", null)
                        .WithMany("Activity")
                        .HasForeignKey("PersonId");
                });

            modelBuilder.Entity("DbCodeFirstApproach.Models.FriendRelation", b =>
                {
                    b.HasOne("DbCodeFirstApproach.Models.Person", "Person")
                        .WithMany("FriendsRelations")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("DbCodeFirstApproach.Models.Person", b =>
                {
                    b.HasOne("DbCodeFirstApproach.Models.FriendRelation", null)
                        .WithMany("Friends")
                        .HasForeignKey("FriendRelationPersonId");
                });

            modelBuilder.Entity("DbCodeFirstApproach.Models.FriendRelation", b =>
                {
                    b.Navigation("Friends");
                });

            modelBuilder.Entity("DbCodeFirstApproach.Models.Person", b =>
                {
                    b.Navigation("Activity");

                    b.Navigation("FriendsRelations");
                });
#pragma warning restore 612, 618
        }
    }
}
